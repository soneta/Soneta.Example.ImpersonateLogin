//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Soneta.ImpersonateLogin.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class WindowRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.DeviceInfo DeviceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LiveCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RerequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ControlRequest[] UpdateValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowHandleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.DeviceInfo DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LiveCounter {
            get {
                return this.LiveCounterField;
            }
            set {
                if ((this.LiveCounterField.Equals(value) != true)) {
                    this.LiveCounterField = value;
                    this.RaisePropertyChanged("LiveCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Rerequest {
            get {
                return this.RerequestField;
            }
            set {
                if ((this.RerequestField.Equals(value) != true)) {
                    this.RerequestField = value;
                    this.RaisePropertyChanged("Rerequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.ControlRequest[] UpdateValues {
            get {
                return this.UpdateValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateValuesField, value) != true)) {
                    this.UpdateValuesField = value;
                    this.RaisePropertyChanged("UpdateValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowHandle {
            get {
                return this.WindowHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowHandleField, value) != true)) {
                    this.WindowHandleField = value;
                    this.RaisePropertyChanged("WindowHandle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class DeviceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContentHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContentWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.DeviceType DeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreenHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreenWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentHeight {
            get {
                return this.ContentHeightField;
            }
            set {
                if ((this.ContentHeightField.Equals(value) != true)) {
                    this.ContentHeightField = value;
                    this.RaisePropertyChanged("ContentHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentWidth {
            get {
                return this.ContentWidthField;
            }
            set {
                if ((this.ContentWidthField.Equals(value) != true)) {
                    this.ContentWidthField = value;
                    this.RaisePropertyChanged("ContentWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.DeviceType DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((this.DeviceTypeField.Equals(value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenHeight {
            get {
                return this.ScreenHeightField;
            }
            set {
                if ((this.ScreenHeightField.Equals(value) != true)) {
                    this.ScreenHeightField = value;
                    this.RaisePropertyChanged("ScreenHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenWidth {
            get {
                return this.ScreenWidthField;
            }
            set {
                if ((this.ScreenWidthField.Equals(value) != true)) {
                    this.ScreenWidthField = value;
                    this.RaisePropertyChanged("ScreenWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ControlRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EditValue {
            get {
                return this.EditValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EditValueField, value) != true)) {
                    this.EditValueField = value;
                    this.RaisePropertyChanged("EditValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceType", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    public enum DeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Browser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileBrowser = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileApp = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsRT = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class WindowsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ElapsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.WindowResponse[] FormsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public long Elapsed {
            get {
                return this.ElapsedField;
            }
            set {
                if ((this.ElapsedField.Equals(value) != true)) {
                    this.ElapsedField = value;
                    this.RaisePropertyChanged("Elapsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.WindowResponse[] Forms {
            get {
                return this.FormsField;
            }
            set {
                if ((object.ReferenceEquals(this.FormsField, value) != true)) {
                    this.FormsField = value;
                    this.RaisePropertyChanged("Forms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class WindowResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.WindowAction ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientOperationRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.WindowFormElementResponse[] ElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsFavField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ControlListResponse[] ListsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LiveCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.FrameInfo[] ParentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ProgressInformation ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ControlPropertyResponse[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RedirectTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RedirectUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RerequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.WindowSessionState SessionStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.DataFormTarget TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.WindowVerifierResponse[] VerifiersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowHandleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.WindowAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CaptionHtml {
            get {
                return this.CaptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionHtmlField, value) != true)) {
                    this.CaptionHtmlField = value;
                    this.RaisePropertyChanged("CaptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ClientOperationRequest {
            get {
                return this.ClientOperationRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientOperationRequestField, value) != true)) {
                    this.ClientOperationRequestField = value;
                    this.RaisePropertyChanged("ClientOperationRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.WindowFormElementResponse[] Elements {
            get {
                return this.ElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementsField, value) != true)) {
                    this.ElementsField = value;
                    this.RaisePropertyChanged("Elements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<bool> IsFav {
            get {
                return this.IsFavField;
            }
            set {
                if ((this.IsFavField.Equals(value) != true)) {
                    this.IsFavField = value;
                    this.RaisePropertyChanged("IsFav");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.ControlListResponse[] Lists {
            get {
                return this.ListsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListsField, value) != true)) {
                    this.ListsField = value;
                    this.RaisePropertyChanged("Lists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LiveCounter {
            get {
                return this.LiveCounterField;
            }
            set {
                if ((this.LiveCounterField.Equals(value) != true)) {
                    this.LiveCounterField = value;
                    this.RaisePropertyChanged("LiveCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.FrameInfo[] Parents {
            get {
                return this.ParentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentsField, value) != true)) {
                    this.ParentsField = value;
                    this.RaisePropertyChanged("Parents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.ProgressInformation Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgressField, value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.ControlPropertyResponse[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RedirectTarget {
            get {
                return this.RedirectTargetField;
            }
            set {
                if ((object.ReferenceEquals(this.RedirectTargetField, value) != true)) {
                    this.RedirectTargetField = value;
                    this.RaisePropertyChanged("RedirectTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RedirectUrl {
            get {
                return this.RedirectUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.RedirectUrlField, value) != true)) {
                    this.RedirectUrlField = value;
                    this.RaisePropertyChanged("RedirectUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int Rerequest {
            get {
                return this.RerequestField;
            }
            set {
                if ((this.RerequestField.Equals(value) != true)) {
                    this.RerequestField = value;
                    this.RaisePropertyChanged("Rerequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.WindowSessionState SessionState {
            get {
                return this.SessionStateField;
            }
            set {
                if ((this.SessionStateField.Equals(value) != true)) {
                    this.SessionStateField = value;
                    this.RaisePropertyChanged("SessionState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.DataFormTarget Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TargetInfo {
            get {
                return this.TargetInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetInfoField, value) != true)) {
                    this.TargetInfoField = value;
                    this.RaisePropertyChanged("TargetInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool UpdateAll {
            get {
                return this.UpdateAllField;
            }
            set {
                if ((this.UpdateAllField.Equals(value) != true)) {
                    this.UpdateAllField = value;
                    this.RaisePropertyChanged("UpdateAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.WindowVerifierResponse[] Verifiers {
            get {
                return this.VerifiersField;
            }
            set {
                if ((object.ReferenceEquals(this.VerifiersField, value) != true)) {
                    this.VerifiersField = value;
                    this.RaisePropertyChanged("Verifiers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowHandle {
            get {
                return this.WindowHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowHandleField, value) != true)) {
                    this.WindowHandleField = value;
                    this.RaisePropertyChanged("WindowHandle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgressInformation", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ProgressInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressInPercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgressInPercent {
            get {
                return this.ProgressInPercentField;
            }
            set {
                if ((this.ProgressInPercentField.Equals(value) != true)) {
                    this.ProgressInPercentField = value;
                    this.RaisePropertyChanged("ProgressInPercent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowAction", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    public enum WindowAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Close = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hide = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowFormElementResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class WindowFormElementResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.FormElement ElementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.FormElement Element {
            get {
                return this.ElementField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementField, value) != true)) {
                    this.ElementField = value;
                    this.RaisePropertyChanged("Element");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlListResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ControlListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.AppearanceInfo[] AppearanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[][] AppearanceDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BackwardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[][] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EndArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FocusedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[][] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilterPanelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[][] ResourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPeriodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.AppearanceInfo[] Appearance {
            get {
                return this.AppearanceField;
            }
            set {
                if ((object.ReferenceEquals(this.AppearanceField, value) != true)) {
                    this.AppearanceField = value;
                    this.RaisePropertyChanged("Appearance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string[][] AppearanceData {
            get {
                return this.AppearanceDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AppearanceDataField, value) != true)) {
                    this.AppearanceDataField = value;
                    this.RaisePropertyChanged("AppearanceData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Backward {
            get {
                return this.BackwardField;
            }
            set {
                if ((this.BackwardField.Equals(value) != true)) {
                    this.BackwardField = value;
                    this.RaisePropertyChanged("Backward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CaptionHtml {
            get {
                return this.CaptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionHtmlField, value) != true)) {
                    this.CaptionHtmlField = value;
                    this.RaisePropertyChanged("CaptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string[][] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool EndArchived {
            get {
                return this.EndArchivedField;
            }
            set {
                if ((this.EndArchivedField.Equals(value) != true)) {
                    this.EndArchivedField = value;
                    this.RaisePropertyChanged("EndArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> Focused {
            get {
                return this.FocusedField;
            }
            set {
                if ((this.FocusedField.Equals(value) != true)) {
                    this.FocusedField = value;
                    this.RaisePropertyChanged("Focused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string[][] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool IsFilterPanel {
            get {
                return this.IsFilterPanelField;
            }
            set {
                if ((this.IsFilterPanelField.Equals(value) != true)) {
                    this.IsFilterPanelField = value;
                    this.RaisePropertyChanged("IsFilterPanel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodField, value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string[][] Resources {
            get {
                return this.ResourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourcesField, value) != true)) {
                    this.ResourcesField = value;
                    this.RaisePropertyChanged("Resources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SelectedPeriod {
            get {
                return this.SelectedPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedPeriodField, value) != true)) {
                    this.SelectedPeriodField = value;
                    this.RaisePropertyChanged("SelectedPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string View {
            get {
                return this.ViewField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewField, value) != true)) {
                    this.ViewField = value;
                    this.RaisePropertyChanged("View");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string WorkPeriod {
            get {
                return this.WorkPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPeriodField, value) != true)) {
                    this.WorkPeriodField = value;
                    this.RaisePropertyChanged("WorkPeriod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrameInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class FrameInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowHandleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CaptionHtml {
            get {
                return this.CaptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionHtmlField, value) != true)) {
                    this.CaptionHtmlField = value;
                    this.RaisePropertyChanged("CaptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowHandle {
            get {
                return this.WindowHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowHandleField, value) != true)) {
                    this.WindowHandleField = value;
                    this.RaisePropertyChanged("WindowHandle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPropertyResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ControlPropertyResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BkColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditorDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendAcceptField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string BkColor {
            get {
                return this.BkColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BkColorField, value) != true)) {
                    this.BkColorField = value;
                    this.RaisePropertyChanged("BkColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CaptionHtml {
            get {
                return this.CaptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionHtmlField, value) != true)) {
                    this.CaptionHtmlField = value;
                    this.RaisePropertyChanged("CaptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DisplayHtml {
            get {
                return this.DisplayHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayHtmlField, value) != true)) {
                    this.DisplayHtmlField = value;
                    this.RaisePropertyChanged("DisplayHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EditValue {
            get {
                return this.EditValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EditValueField, value) != true)) {
                    this.EditValueField = value;
                    this.RaisePropertyChanged("EditValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<bool> Editable {
            get {
                return this.EditableField;
            }
            set {
                if ((this.EditableField.Equals(value) != true)) {
                    this.EditableField = value;
                    this.RaisePropertyChanged("Editable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EditorData {
            get {
                return this.EditorDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EditorDataField, value) != true)) {
                    this.EditorDataField = value;
                    this.RaisePropertyChanged("EditorData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EditorType {
            get {
                return this.EditorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EditorTypeField, value) != true)) {
                    this.EditorTypeField = value;
                    this.RaisePropertyChanged("EditorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<bool> IsPage {
            get {
                return this.IsPageField;
            }
            set {
                if ((this.IsPageField.Equals(value) != true)) {
                    this.IsPageField = value;
                    this.RaisePropertyChanged("IsPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                if ((this.MaxLengthField.Equals(value) != true)) {
                    this.MaxLengthField = value;
                    this.RaisePropertyChanged("MaxLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool SendAccept {
            get {
                return this.SendAcceptField;
            }
            set {
                if ((this.SendAcceptField.Equals(value) != true)) {
                    this.SendAcceptField = value;
                    this.RaisePropertyChanged("SendAccept");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowSessionState", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    public enum WindowSessionState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Changed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataFormTarget", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Business.UI")]
    public enum DataFormTarget : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Child = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewFrame = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Popup = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComboBox = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modal = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NavigationSearchResults = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowVerifierResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class WindowVerifierResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KeepFocusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.VerifierType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DescriptionHtml {
            get {
                return this.DescriptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionHtmlField, value) != true)) {
                    this.DescriptionHtmlField = value;
                    this.RaisePropertyChanged("DescriptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool KeepFocus {
            get {
                return this.KeepFocusField;
            }
            set {
                if ((this.KeepFocusField.Equals(value) != true)) {
                    this.KeepFocusField = value;
                    this.RaisePropertyChanged("KeepFocus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Remove {
            get {
                return this.RemoveField;
            }
            set {
                if ((this.RemoveField.Equals(value) != true)) {
                    this.RemoveField = value;
                    this.RaisePropertyChanged("Remove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.VerifierType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormElement", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class FormElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowSchedulerDraggingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowSchedulerEditingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditorDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.FormElement[] ElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.AggregationType FooterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.UIElementType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.DataFormView ViewTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool AllowSchedulerDragging {
            get {
                return this.AllowSchedulerDraggingField;
            }
            set {
                if ((this.AllowSchedulerDraggingField.Equals(value) != true)) {
                    this.AllowSchedulerDraggingField = value;
                    this.RaisePropertyChanged("AllowSchedulerDragging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool AllowSchedulerEditing {
            get {
                return this.AllowSchedulerEditingField;
            }
            set {
                if ((this.AllowSchedulerEditingField.Equals(value) != true)) {
                    this.AllowSchedulerEditingField = value;
                    this.RaisePropertyChanged("AllowSchedulerEditing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CaptionHtml {
            get {
                return this.CaptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionHtmlField, value) != true)) {
                    this.CaptionHtmlField = value;
                    this.RaisePropertyChanged("CaptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DescriptionHtml {
            get {
                return this.DescriptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionHtmlField, value) != true)) {
                    this.DescriptionHtmlField = value;
                    this.RaisePropertyChanged("DescriptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EditorData {
            get {
                return this.EditorDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EditorDataField, value) != true)) {
                    this.EditorDataField = value;
                    this.RaisePropertyChanged("EditorData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EditorType {
            get {
                return this.EditorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EditorTypeField, value) != true)) {
                    this.EditorTypeField = value;
                    this.RaisePropertyChanged("EditorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.FormElement[] Elements {
            get {
                return this.ElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementsField, value) != true)) {
                    this.ElementsField = value;
                    this.RaisePropertyChanged("Elements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.AggregationType Footer {
            get {
                return this.FooterField;
            }
            set {
                if ((this.FooterField.Equals(value) != true)) {
                    this.FooterField = value;
                    this.RaisePropertyChanged("Footer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Script {
            get {
                return this.ScriptField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptField, value) != true)) {
                    this.ScriptField = value;
                    this.RaisePropertyChanged("Script");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TagInfo {
            get {
                return this.TagInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.TagInfoField, value) != true)) {
                    this.TagInfoField = value;
                    this.RaisePropertyChanged("TagInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.UIElementType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.DataFormView ViewType {
            get {
                return this.ViewTypeField;
            }
            set {
                if ((this.ViewTypeField.Equals(value) != true)) {
                    this.ViewTypeField = value;
                    this.RaisePropertyChanged("ViewType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AggregationType", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Business.UI")]
    public enum AggregationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auto = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Count = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Average = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Max = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UIElementType", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Business.UI")]
    public enum UIElementType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Label = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Field = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gap = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Html = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grid = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        List = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scheduler = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diagram = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pivot = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chart = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flow = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Row = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stack = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dashboard = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bar = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Page = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Include = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Command = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserControl = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Axis = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserFilter = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataFormView", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Business.UI")]
    public enum DataFormView : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dialog = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Form = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppearanceInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class AppearanceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForeColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string BackColor {
            get {
                return this.BackColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackColorField, value) != true)) {
                    this.BackColorField = value;
                    this.RaisePropertyChanged("BackColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FontStyle {
            get {
                return this.FontStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.FontStyleField, value) != true)) {
                    this.FontStyleField = value;
                    this.RaisePropertyChanged("FontStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ForeColor {
            get {
                return this.ForeColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeColorField, value) != true)) {
                    this.ForeColorField = value;
                    this.RaisePropertyChanged("ForeColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerifierType", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    public enum VerifierType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowFormRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class WindowFormRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormUIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormUID {
            get {
                return this.FormUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormUIDField, value) != true)) {
                    this.FormUIDField = value;
                    this.RaisePropertyChanged("FormUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingResponse", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class PingResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LogoutRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemindersCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AdminMessage {
            get {
                return this.AdminMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminMessageField, value) != true)) {
                    this.AdminMessageField = value;
                    this.RaisePropertyChanged("AdminMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool LogoutRequested {
            get {
                return this.LogoutRequestedField;
            }
            set {
                if ((this.LogoutRequestedField.Equals(value) != true)) {
                    this.LogoutRequestedField = value;
                    this.RaisePropertyChanged("LogoutRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int RemindersCount {
            get {
                return this.RemindersCountField;
            }
            set {
                if ((this.RemindersCountField.Equals(value) != true)) {
                    this.RemindersCountField = value;
                    this.RaisePropertyChanged("RemindersCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class PingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] WindowHandlesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseName {
            get {
                return this.DatabaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseNameField, value) != true)) {
                    this.DatabaseNameField = value;
                    this.RaisePropertyChanged("DatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginHandle {
            get {
                return this.LoginHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginHandleField, value) != true)) {
                    this.LoginHandleField = value;
                    this.RaisePropertyChanged("LoginHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] WindowHandles {
            get {
                return this.WindowHandlesField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowHandlesField, value) != true)) {
                    this.WindowHandlesField = value;
                    this.RaisePropertyChanged("WindowHandles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileReadyRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class FileReadyRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OptionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ext {
            get {
                return this.ExtField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtField, value) != true)) {
                    this.ExtField = value;
                    this.RaisePropertyChanged("Ext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageHeight {
            get {
                return this.ImageHeightField;
            }
            set {
                if ((this.ImageHeightField.Equals(value) != true)) {
                    this.ImageHeightField = value;
                    this.RaisePropertyChanged("ImageHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageWidth {
            get {
                return this.ImageWidthField;
            }
            set {
                if ((this.ImageWidthField.Equals(value) != true)) {
                    this.ImageWidthField = value;
                    this.RaisePropertyChanged("ImageWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Optional {
            get {
                return this.OptionalField;
            }
            set {
                if ((this.OptionalField.Equals(value) != true)) {
                    this.OptionalField = value;
                    this.RaisePropertyChanged("Optional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordStamp {
            get {
                return this.RecordStampField;
            }
            set {
                if ((this.RecordStampField.Equals(value) != true)) {
                    this.RecordStampField = value;
                    this.RaisePropertyChanged("RecordStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvokerResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class InvokerResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ResultString {
            get {
                return this.ResultStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultStringField, value) != true)) {
                    this.ResultStringField = value;
                    this.RaisePropertyChanged("ResultString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ExceptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseHandle {
            get {
                return this.DatabaseHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseHandleField, value) != true)) {
                    this.DatabaseHandleField = value;
                    this.RaisePropertyChanged("DatabaseHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUploadRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class FileUploadRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Bytes {
            get {
                return this.BytesField;
            }
            set {
                if ((object.ReferenceEquals(this.BytesField, value) != true)) {
                    this.BytesField = value;
                    this.RaisePropertyChanged("Bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class TestRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LiveCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrevTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseHandle {
            get {
                return this.DatabaseHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseHandleField, value) != true)) {
                    this.DatabaseHandleField = value;
                    this.RaisePropertyChanged("DatabaseHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LiveCounter {
            get {
                return this.LiveCounterField;
            }
            set {
                if ((this.LiveCounterField.Equals(value) != true)) {
                    this.LiveCounterField = value;
                    this.RaisePropertyChanged("LiveCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevInfo {
            get {
                return this.PrevInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevInfoField, value) != true)) {
                    this.PrevInfoField = value;
                    this.RaisePropertyChanged("PrevInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrevTime {
            get {
                return this.PrevTimeField;
            }
            set {
                if ((this.PrevTimeField.Equals(value) != true)) {
                    this.PrevTimeField = value;
                    this.RaisePropertyChanged("PrevTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceMethodInvokerParams", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    [System.SerializableAttribute()]
    public partial class ServiceMethodInvokerParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> MethodArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAddress {
            get {
                return this.ClientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAddressField, value) != true)) {
                    this.ClientAddressField = value;
                    this.RaisePropertyChanged("ClientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseHandle {
            get {
                return this.DatabaseHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseHandleField, value) != true)) {
                    this.DatabaseHandleField = value;
                    this.RaisePropertyChanged("DatabaseHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpFilters {
            get {
                return this.IpFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.IpFiltersField, value) != true)) {
                    this.IpFiltersField = value;
                    this.RaisePropertyChanged("IpFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> MethodArgs {
            get {
                return this.MethodArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodArgsField, value) != true)) {
                    this.MethodArgsField = value;
                    this.RaisePropertyChanged("MethodArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationType", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    public enum AuthenticationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserPassword = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windows = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalLogin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegratedLogin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImpersonateLogin = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalAccountProvider", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    [System.SerializableAttribute()]
    public partial class ExternalAccountProvider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientSecureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ProviderType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientSecure {
            get {
                return this.ClientSecureField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientSecureField, value) != true)) {
                    this.ClientSecureField = value;
                    this.RaisePropertyChanged("ClientSecure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleField, value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ProviderType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderType", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Types")]
    public enum ProviderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facebook = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Google = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkedIn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LiveId = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 100,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvokeServiceMethodResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[][]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.VerifierType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ServiceMethodInvokerParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.AuthenticationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvider[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ProviderType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.AggregationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.UIElementType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.DataFormView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.DataFormTarget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.DeviceInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ControlRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ControlRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowResponse[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowFormElementResponse[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowFormElementResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FormElement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FormElement[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ControlListResponse[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ControlListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.AppearanceInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.AppearanceInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FrameInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FrameInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ProgressInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ControlPropertyResponse[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ControlPropertyResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowSessionState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowVerifierResponse[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowVerifierResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.WindowFormRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.PingResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.PingRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.InvokerResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FileUploadRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.TestRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.FolderItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.LoginInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ProviderUserInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ExternalProvidersInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvidersResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.AuthenticateUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenResult))]
    public partial class InvokeServiceMethodResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmptyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ResultInstanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmpty {
            get {
                return this.IsEmptyField;
            }
            set {
                if ((this.IsEmptyField.Equals(value) != true)) {
                    this.IsEmptyField = value;
                    this.RaisePropertyChanged("IsEmpty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsException {
            get {
                return this.IsExceptionField;
            }
            set {
                if ((this.IsExceptionField.Equals(value) != true)) {
                    this.IsExceptionField = value;
                    this.RaisePropertyChanged("IsException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ResultInstance {
            get {
                return this.ResultInstanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultInstanceField, value) != true)) {
                    this.ResultInstanceField = value;
                    this.RaisePropertyChanged("ResultInstance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class FolderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WithDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WithDescription {
            get {
                return this.WithDescriptionField;
            }
            set {
                if ((this.WithDescriptionField.Equals(value) != true)) {
                    this.WithDescriptionField = value;
                    this.RaisePropertyChanged("WithDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderItem", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class FolderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrickColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SingleBrickField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int BrickColor {
            get {
                return this.BrickColorField;
            }
            set {
                if ((this.BrickColorField.Equals(value) != true)) {
                    this.BrickColorField = value;
                    this.RaisePropertyChanged("BrickColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaptionHtml {
            get {
                return this.CaptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionHtmlField, value) != true)) {
                    this.CaptionHtmlField = value;
                    this.RaisePropertyChanged("CaptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DescriptionHtml {
            get {
                return this.DescriptionHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionHtmlField, value) != true)) {
                    this.DescriptionHtmlField = value;
                    this.RaisePropertyChanged("DescriptionHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GroupHtml {
            get {
                return this.GroupHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupHtmlField, value) != true)) {
                    this.GroupHtmlField = value;
                    this.RaisePropertyChanged("GroupHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool SingleBrick {
            get {
                return this.SingleBrickField;
            }
            set {
                if ((this.SingleBrickField.Equals(value) != true)) {
                    this.SingleBrickField = value;
                    this.RaisePropertyChanged("SingleBrick");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScripterRequest", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ScripterRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScriptField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Script {
            get {
                return this.ScriptField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptField, value) != true)) {
                    this.ScriptField = value;
                    this.RaisePropertyChanged("Script");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class LoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientUniqueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.DeviceInfo DeviceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpFiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.AuthenticationType ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebServerAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientUniqueID {
            get {
                return this.ClientUniqueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientUniqueIDField, value) != true)) {
                    this.ClientUniqueIDField = value;
                    this.RaisePropertyChanged("ClientUniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfo {
            get {
                return this.ConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true)) {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentCulture {
            get {
                return this.CurrentCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentCultureField, value) != true)) {
                    this.CurrentCultureField = value;
                    this.RaisePropertyChanged("CurrentCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.DeviceInfo DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleField, value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpFilters {
            get {
                return this.IpFiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.IpFiltersField, value) != true)) {
                    this.IpFiltersField = value;
                    this.RaisePropertyChanged("IpFilters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.AuthenticationType Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderUserId {
            get {
                return this.ProviderUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderUserIdField, value) != true)) {
                    this.ProviderUserIdField = value;
                    this.RaisePropertyChanged("ProviderUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebServerAddress {
            get {
                return this.WebServerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WebServerAddressField, value) != true)) {
                    this.WebServerAddressField = value;
                    this.RaisePropertyChanged("WebServerAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ConnectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerType {
            get {
                return this.ServerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerTypeField, value) != true)) {
                    this.ServerTypeField = value;
                    this.RaisePropertyChanged("ServerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfoResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class LoginInfoResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DBNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JsLanguageResourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemoveConfigMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentCulture {
            get {
                return this.CurrentCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentCultureField, value) != true)) {
                    this.CurrentCultureField = value;
                    this.RaisePropertyChanged("CurrentCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DBName {
            get {
                return this.DBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DBNameField, value) != true)) {
                    this.DBNameField = value;
                    this.RaisePropertyChanged("DBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleField, value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JsLanguageResources {
            get {
                return this.JsLanguageResourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.JsLanguageResourcesField, value) != true)) {
                    this.JsLanguageResourcesField = value;
                    this.RaisePropertyChanged("JsLanguageResources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RemoveConfigMenu {
            get {
                return this.RemoveConfigMenuField;
            }
            set {
                if ((this.RemoveConfigMenuField.Equals(value) != true)) {
                    this.RemoveConfigMenuField = value;
                    this.RaisePropertyChanged("RemoveConfigMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePwdInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ChangePwdInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderUserInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ProviderUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContextHandle {
            get {
                return this.ContextHandleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextHandleField, value) != true)) {
                    this.ContextHandleField = value;
                    this.RaisePropertyChanged("ContextHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderUserId {
            get {
                return this.ProviderUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderUserIdField, value) != true)) {
                    this.ProviderUserIdField = value;
                    this.RaisePropertyChanged("ProviderUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalProvidersInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ExternalProvidersInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfo {
            get {
                return this.ConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true)) {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalAccountProvidersResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ExternalAccountProvidersResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvider[] ProvidersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvider[] Providers {
            get {
                return this.ProvidersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvidersField, value) != true)) {
                    this.ProvidersField = value;
                    this.RaisePropertyChanged("Providers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbConfigSettingsInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class DbConfigSettingsInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfo {
            get {
                return this.ConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true)) {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbConfigSettingsResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class DbConfigSettingsResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> DbConfigSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> DbConfigSettings {
            get {
                return this.DbConfigSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DbConfigSettingsField, value) != true)) {
                    this.DbConfigSettingsField = value;
                    this.RaisePropertyChanged("DbConfigSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticateUserResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class AuthenticateUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthenticatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthenticated {
            get {
                return this.IsAuthenticatedField;
            }
            set {
                if ((this.IsAuthenticatedField.Equals(value) != true)) {
                    this.IsAuthenticatedField = value;
                    this.RaisePropertyChanged("IsAuthenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePwdUserInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ChangePwdUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfo {
            get {
                return this.ConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true)) {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePwdUserResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class ChangePwdUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChangedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Changed {
            get {
                return this.ChangedField;
            }
            set {
                if ((this.ChangedField.Equals(value) != true)) {
                    this.ChangedField = value;
                    this.RaisePropertyChanged("Changed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenerateTokenInfo", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class GenerateTokenInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Soneta.ImpersonateLogin.ServiceReference1.ConnectionInfo ConnectionInfo {
            get {
                return this.ConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionInfoField, value) != true)) {
                    this.ConnectionInfoField = value;
                    this.RaisePropertyChanged("ConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenerateTokenResult", Namespace="http://schemas.datacontract.org/2004/07/Soneta.Net.Types")]
    [System.SerializableAttribute()]
    public partial class GenerateTokenResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthenticatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbName {
            get {
                return this.DbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DbNameField, value) != true)) {
                    this.DbNameField = value;
                    this.RaisePropertyChanged("DbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthenticated {
            get {
                return this.IsAuthenticatedField;
            }
            set {
                if ((this.IsAuthenticatedField.Equals(value) != true)) {
                    this.IsAuthenticatedField = value;
                    this.RaisePropertyChanged("IsAuthenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBusinessProvider")]
    public interface IBusinessProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/Execute", ReplyAction="http://tempuri.org/IWindowService/ExecuteResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse Execute(Soneta.ImpersonateLogin.ServiceReference1.WindowRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/Execute", ReplyAction="http://tempuri.org/IWindowService/ExecuteResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> ExecuteAsync(Soneta.ImpersonateLogin.ServiceReference1.WindowRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/GetForm", ReplyAction="http://tempuri.org/IWindowService/GetFormResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.FormElement GetForm(Soneta.ImpersonateLogin.ServiceReference1.WindowFormRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/GetForm", ReplyAction="http://tempuri.org/IWindowService/GetFormResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FormElement> GetFormAsync(Soneta.ImpersonateLogin.ServiceReference1.WindowFormRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/Ping", ReplyAction="http://tempuri.org/IWindowService/PingResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.PingResponse Ping(string[] req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/Ping", ReplyAction="http://tempuri.org/IWindowService/PingResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.PingResponse> PingAsync(string[] req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/PingSession", ReplyAction="http://tempuri.org/IWindowService/PingSessionResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.PingResponse PingSession(Soneta.ImpersonateLogin.ServiceReference1.PingRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/PingSession", ReplyAction="http://tempuri.org/IWindowService/PingSessionResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.PingResponse> PingSessionAsync(Soneta.ImpersonateLogin.ServiceReference1.PingRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/SetInfo", ReplyAction="http://tempuri.org/IWindowService/SetInfoResponse")]
        string SetInfo(string cx, string status, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/SetInfo", ReplyAction="http://tempuri.org/IWindowService/SetInfoResponse")]
        System.Threading.Tasks.Task<string> SetInfoAsync(string cx, string status, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/IsFileReady", ReplyAction="http://tempuri.org/IWindowService/IsFileReadyResponse")]
        string IsFileReady(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/IsFileReady", ReplyAction="http://tempuri.org/IWindowService/IsFileReadyResponse")]
        System.Threading.Tasks.Task<string> IsFileReadyAsync(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/GetCurrentCulture", ReplyAction="http://tempuri.org/IWindowService/GetCurrentCultureResponse")]
        string GetCurrentCulture(string cx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/GetCurrentCulture", ReplyAction="http://tempuri.org/IWindowService/GetCurrentCultureResponse")]
        System.Threading.Tasks.Task<string> GetCurrentCultureAsync(string cx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/GetFile", ReplyAction="http://tempuri.org/IWindowService/GetFileResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.InvokerResult GetFile(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest fileRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/GetFile", ReplyAction="http://tempuri.org/IWindowService/GetFileResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.InvokerResult> GetFileAsync(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest fileRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/PutFile", ReplyAction="http://tempuri.org/IWindowService/PutFileResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.InvokerResult PutFile(Soneta.ImpersonateLogin.ServiceReference1.FileUploadRequest fileUploadRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/PutFile", ReplyAction="http://tempuri.org/IWindowService/PutFileResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.InvokerResult> PutFileAsync(Soneta.ImpersonateLogin.ServiceReference1.FileUploadRequest fileUploadRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/AddLog", ReplyAction="http://tempuri.org/IWindowService/AddLogResponse")]
        string AddLog(Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/AddLog", ReplyAction="http://tempuri.org/IWindowService/AddLogResponse")]
        System.Threading.Tasks.Task<string> AddLogAsync(Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/Test", ReplyAction="http://tempuri.org/IWindowService/TestResponse")]
        string Test(Soneta.ImpersonateLogin.ServiceReference1.TestRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/Test", ReplyAction="http://tempuri.org/IWindowService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync(Soneta.ImpersonateLogin.ServiceReference1.TestRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/InvokeServiceMethod", ReplyAction="http://tempuri.org/IWindowService/InvokeServiceMethodResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.InvokeServiceMethodResult InvokeServiceMethod(Soneta.ImpersonateLogin.ServiceReference1.ServiceMethodInvokerParams invokeServiceMethodParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWindowService/InvokeServiceMethod", ReplyAction="http://tempuri.org/IWindowService/InvokeServiceMethodResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.InvokeServiceMethodResult> InvokeServiceMethodAsync(Soneta.ImpersonateLogin.ServiceReference1.ServiceMethodInvokerParams invokeServiceMethodParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetFoldersTree", ReplyAction="http://tempuri.org/IFolderService/GetFoldersTreeResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetFoldersTree(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetFoldersTree", ReplyAction="http://tempuri.org/IFolderService/GetFoldersTreeResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetFoldersTreeAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetModules", ReplyAction="http://tempuri.org/IFolderService/GetModulesResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetModules(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetModules", ReplyAction="http://tempuri.org/IFolderService/GetModulesResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetModulesAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetFavorites", ReplyAction="http://tempuri.org/IFolderService/GetFavoritesResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetFavorites(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetFavorites", ReplyAction="http://tempuri.org/IFolderService/GetFavoritesResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetFavoritesAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetRecent", ReplyAction="http://tempuri.org/IFolderService/GetRecentResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetRecent(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetRecent", ReplyAction="http://tempuri.org/IFolderService/GetRecentResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetRecentAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetFolder", ReplyAction="http://tempuri.org/IFolderService/GetFolderResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse GetFolder(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetFolder", ReplyAction="http://tempuri.org/IFolderService/GetFolderResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> GetFolderAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetStart", ReplyAction="http://tempuri.org/IFolderService/GetStartResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse GetStart(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetStart", ReplyAction="http://tempuri.org/IFolderService/GetStartResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> GetStartAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetData", ReplyAction="http://tempuri.org/IFolderService/GetDataResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse GetData(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/GetData", ReplyAction="http://tempuri.org/IFolderService/GetDataResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> GetDataAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/ProcessAspx", ReplyAction="http://tempuri.org/IFolderService/ProcessAspxResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse ProcessAspx(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/ProcessAspx", ReplyAction="http://tempuri.org/IFolderService/ProcessAspxResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> ProcessAspxAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/Scripter", ReplyAction="http://tempuri.org/IFolderService/ScripterResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest Scripter(Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest rq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFolderService/Scripter", ReplyAction="http://tempuri.org/IFolderService/ScripterResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest> ScripterAsync(Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest rq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.LoginInfoResult Login(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.LoginInfoResult> LoginAsync(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Logoff", ReplyAction="http://tempuri.org/ILoginService/LogoffResponse")]
        string Logoff(string handle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Logoff", ReplyAction="http://tempuri.org/ILoginService/LogoffResponse")]
        System.Threading.Tasks.Task<string> LogoffAsync(string handle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetOperators", ReplyAction="http://tempuri.org/ILoginService/GetOperatorsResponse")]
        string[] GetOperators(string dbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetOperators", ReplyAction="http://tempuri.org/ILoginService/GetOperatorsResponse")]
        System.Threading.Tasks.Task<string[]> GetOperatorsAsync(string dbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ResetNetPassword", ReplyAction="http://tempuri.org/ILoginService/ResetNetPasswordResponse")]
        string[] ResetNetPassword(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ResetNetPassword", ReplyAction="http://tempuri.org/ILoginService/ResetNetPasswordResponse")]
        System.Threading.Tasks.Task<string[]> ResetNetPasswordAsync(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangeNetPassword", ReplyAction="http://tempuri.org/ILoginService/ChangeNetPasswordResponse")]
        string ChangeNetPassword(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdInfo pwdInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangeNetPassword", ReplyAction="http://tempuri.org/ILoginService/ChangeNetPasswordResponse")]
        System.Threading.Tasks.Task<string> ChangeNetPasswordAsync(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdInfo pwdInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/RegisterProviderForUser", ReplyAction="http://tempuri.org/ILoginService/RegisterProviderForUserResponse")]
        void RegisterProviderForUser(Soneta.ImpersonateLogin.ServiceReference1.ProviderUserInfo providerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/RegisterProviderForUser", ReplyAction="http://tempuri.org/ILoginService/RegisterProviderForUserResponse")]
        System.Threading.Tasks.Task RegisterProviderForUserAsync(Soneta.ImpersonateLogin.ServiceReference1.ProviderUserInfo providerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetExternalAccountProviders", ReplyAction="http://tempuri.org/ILoginService/GetExternalAccountProvidersResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvidersResult GetExternalAccountProviders(Soneta.ImpersonateLogin.ServiceReference1.ExternalProvidersInfo externalProvidersInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetExternalAccountProviders", ReplyAction="http://tempuri.org/ILoginService/GetExternalAccountProvidersResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvidersResult> GetExternalAccountProvidersAsync(Soneta.ImpersonateLogin.ServiceReference1.ExternalProvidersInfo externalProvidersInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetDbConfigSettings", ReplyAction="http://tempuri.org/ILoginService/GetDbConfigSettingsResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsResult GetDbConfigSettings(Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsInfo dbConfigSettingsInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetDbConfigSettings", ReplyAction="http://tempuri.org/ILoginService/GetDbConfigSettingsResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsResult> GetDbConfigSettingsAsync(Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsInfo dbConfigSettingsInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AuthenticateUser", ReplyAction="http://tempuri.org/ILoginService/AuthenticateUserResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.AuthenticateUserResult AuthenticateUser(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AuthenticateUser", ReplyAction="http://tempuri.org/ILoginService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.AuthenticateUserResult> AuthenticateUserAsync(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangeUserPassword", ReplyAction="http://tempuri.org/ILoginService/ChangeUserPasswordResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserResult ChangeUserPassword(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangeUserPassword", ReplyAction="http://tempuri.org/ILoginService/ChangeUserPasswordResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserResult> ChangeUserPasswordAsync(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GenerateToken", ReplyAction="http://tempuri.org/ILoginService/GenerateTokenResponse")]
        Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenResult GenerateToken(Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenInfo tokenInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GenerateToken", ReplyAction="http://tempuri.org/ILoginService/GenerateTokenResponse")]
        System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenResult> GenerateTokenAsync(Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenInfo tokenInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusinessProviderChannel : Soneta.ImpersonateLogin.ServiceReference1.IBusinessProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusinessProviderClient : System.ServiceModel.ClientBase<Soneta.ImpersonateLogin.ServiceReference1.IBusinessProvider>, Soneta.ImpersonateLogin.ServiceReference1.IBusinessProvider {
        
        public BusinessProviderClient() {
        }
        
        public BusinessProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusinessProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse Execute(Soneta.ImpersonateLogin.ServiceReference1.WindowRequest req) {
            return base.Channel.Execute(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> ExecuteAsync(Soneta.ImpersonateLogin.ServiceReference1.WindowRequest req) {
            return base.Channel.ExecuteAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.FormElement GetForm(Soneta.ImpersonateLogin.ServiceReference1.WindowFormRequest req) {
            return base.Channel.GetForm(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FormElement> GetFormAsync(Soneta.ImpersonateLogin.ServiceReference1.WindowFormRequest req) {
            return base.Channel.GetFormAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.PingResponse Ping(string[] req) {
            return base.Channel.Ping(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.PingResponse> PingAsync(string[] req) {
            return base.Channel.PingAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.PingResponse PingSession(Soneta.ImpersonateLogin.ServiceReference1.PingRequest req) {
            return base.Channel.PingSession(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.PingResponse> PingSessionAsync(Soneta.ImpersonateLogin.ServiceReference1.PingRequest req) {
            return base.Channel.PingSessionAsync(req);
        }
        
        public string SetInfo(string cx, string status, string info) {
            return base.Channel.SetInfo(cx, status, info);
        }
        
        public System.Threading.Tasks.Task<string> SetInfoAsync(string cx, string status, string info) {
            return base.Channel.SetInfoAsync(cx, status, info);
        }
        
        public string IsFileReady(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest req) {
            return base.Channel.IsFileReady(req);
        }
        
        public System.Threading.Tasks.Task<string> IsFileReadyAsync(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest req) {
            return base.Channel.IsFileReadyAsync(req);
        }
        
        public string GetCurrentCulture(string cx) {
            return base.Channel.GetCurrentCulture(cx);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentCultureAsync(string cx) {
            return base.Channel.GetCurrentCultureAsync(cx);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.InvokerResult GetFile(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest fileRequest) {
            return base.Channel.GetFile(fileRequest);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.InvokerResult> GetFileAsync(Soneta.ImpersonateLogin.ServiceReference1.FileReadyRequest fileRequest) {
            return base.Channel.GetFileAsync(fileRequest);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.InvokerResult PutFile(Soneta.ImpersonateLogin.ServiceReference1.FileUploadRequest fileUploadRequest) {
            return base.Channel.PutFile(fileUploadRequest);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.InvokerResult> PutFileAsync(Soneta.ImpersonateLogin.ServiceReference1.FileUploadRequest fileUploadRequest) {
            return base.Channel.PutFileAsync(fileUploadRequest);
        }
        
        public string AddLog(Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo info) {
            return base.Channel.AddLog(info);
        }
        
        public System.Threading.Tasks.Task<string> AddLogAsync(Soneta.ImpersonateLogin.ServiceReference1.ExceptionInfo info) {
            return base.Channel.AddLogAsync(info);
        }
        
        public string Test(Soneta.ImpersonateLogin.ServiceReference1.TestRequest req) {
            return base.Channel.Test(req);
        }
        
        public System.Threading.Tasks.Task<string> TestAsync(Soneta.ImpersonateLogin.ServiceReference1.TestRequest req) {
            return base.Channel.TestAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.InvokeServiceMethodResult InvokeServiceMethod(Soneta.ImpersonateLogin.ServiceReference1.ServiceMethodInvokerParams invokeServiceMethodParams) {
            return base.Channel.InvokeServiceMethod(invokeServiceMethodParams);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.InvokeServiceMethodResult> InvokeServiceMethodAsync(Soneta.ImpersonateLogin.ServiceReference1.ServiceMethodInvokerParams invokeServiceMethodParams) {
            return base.Channel.InvokeServiceMethodAsync(invokeServiceMethodParams);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetFoldersTree(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetFoldersTree(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetFoldersTreeAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetFoldersTreeAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetModules(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetModules(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetModulesAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetModulesAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetFavorites(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetFavorites(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetFavoritesAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetFavoritesAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.FolderItem[] GetRecent(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetRecent(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.FolderItem[]> GetRecentAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetRecentAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse GetFolder(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetFolder(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> GetFolderAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetFolderAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse GetStart(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetStart(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> GetStartAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetStartAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse GetData(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetData(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> GetDataAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.GetDataAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse ProcessAspx(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.ProcessAspx(req);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.WindowsResponse> ProcessAspxAsync(Soneta.ImpersonateLogin.ServiceReference1.FolderRequest req) {
            return base.Channel.ProcessAspxAsync(req);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest Scripter(Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest rq) {
            return base.Channel.Scripter(rq);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest> ScripterAsync(Soneta.ImpersonateLogin.ServiceReference1.ScripterRequest rq) {
            return base.Channel.ScripterAsync(rq);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.LoginInfoResult Login(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo) {
            return base.Channel.Login(loginInfo);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.LoginInfoResult> LoginAsync(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo) {
            return base.Channel.LoginAsync(loginInfo);
        }
        
        public string Logoff(string handle) {
            return base.Channel.Logoff(handle);
        }
        
        public System.Threading.Tasks.Task<string> LogoffAsync(string handle) {
            return base.Channel.LogoffAsync(handle);
        }
        
        public string[] GetOperators(string dbName) {
            return base.Channel.GetOperators(dbName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetOperatorsAsync(string dbName) {
            return base.Channel.GetOperatorsAsync(dbName);
        }
        
        public string[] ResetNetPassword(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo) {
            return base.Channel.ResetNetPassword(loginInfo);
        }
        
        public System.Threading.Tasks.Task<string[]> ResetNetPasswordAsync(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo) {
            return base.Channel.ResetNetPasswordAsync(loginInfo);
        }
        
        public string ChangeNetPassword(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdInfo pwdInfo) {
            return base.Channel.ChangeNetPassword(pwdInfo);
        }
        
        public System.Threading.Tasks.Task<string> ChangeNetPasswordAsync(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdInfo pwdInfo) {
            return base.Channel.ChangeNetPasswordAsync(pwdInfo);
        }
        
        public void RegisterProviderForUser(Soneta.ImpersonateLogin.ServiceReference1.ProviderUserInfo providerInfo) {
            base.Channel.RegisterProviderForUser(providerInfo);
        }
        
        public System.Threading.Tasks.Task RegisterProviderForUserAsync(Soneta.ImpersonateLogin.ServiceReference1.ProviderUserInfo providerInfo) {
            return base.Channel.RegisterProviderForUserAsync(providerInfo);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvidersResult GetExternalAccountProviders(Soneta.ImpersonateLogin.ServiceReference1.ExternalProvidersInfo externalProvidersInfo) {
            return base.Channel.GetExternalAccountProviders(externalProvidersInfo);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.ExternalAccountProvidersResult> GetExternalAccountProvidersAsync(Soneta.ImpersonateLogin.ServiceReference1.ExternalProvidersInfo externalProvidersInfo) {
            return base.Channel.GetExternalAccountProvidersAsync(externalProvidersInfo);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsResult GetDbConfigSettings(Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsInfo dbConfigSettingsInfo) {
            return base.Channel.GetDbConfigSettings(dbConfigSettingsInfo);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsResult> GetDbConfigSettingsAsync(Soneta.ImpersonateLogin.ServiceReference1.DbConfigSettingsInfo dbConfigSettingsInfo) {
            return base.Channel.GetDbConfigSettingsAsync(dbConfigSettingsInfo);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.AuthenticateUserResult AuthenticateUser(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo) {
            return base.Channel.AuthenticateUser(loginInfo);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.AuthenticateUserResult> AuthenticateUserAsync(Soneta.ImpersonateLogin.ServiceReference1.LoginInfo loginInfo) {
            return base.Channel.AuthenticateUserAsync(loginInfo);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserResult ChangeUserPassword(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserInfo userInfo) {
            return base.Channel.ChangeUserPassword(userInfo);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserResult> ChangeUserPasswordAsync(Soneta.ImpersonateLogin.ServiceReference1.ChangePwdUserInfo userInfo) {
            return base.Channel.ChangeUserPasswordAsync(userInfo);
        }
        
        public Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenResult GenerateToken(Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenInfo tokenInfo) {
            return base.Channel.GenerateToken(tokenInfo);
        }
        
        public System.Threading.Tasks.Task<Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenResult> GenerateTokenAsync(Soneta.ImpersonateLogin.ServiceReference1.GenerateTokenInfo tokenInfo) {
            return base.Channel.GenerateTokenAsync(tokenInfo);
        }
    }
}
